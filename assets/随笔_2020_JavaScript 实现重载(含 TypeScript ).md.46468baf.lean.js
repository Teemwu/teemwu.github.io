import{_ as l,c as n,b as i,w as o,d as t,e,r as d,o as _,f as u}from"./app.ff5bb764.js";const x=JSON.parse('{"title":"JavaScript 实现重载(含 TypeScript )","description":"","frontmatter":{"title":"JavaScript 实现重载(含 TypeScript )","author":"teemwu","date":"2020/08/06 23:57","isPublished":false,"categories":null,"tags":null,"wordCount":180},"headers":[{"level":1,"title":"JavaScript 实现重载(含 TypeScript )","slug":"javascript-实现重载-含-typescript","link":"#javascript-实现重载-含-typescript","children":[{"level":3,"title":"那么什么是重载呢？","slug":"那么什么是重载呢","link":"#那么什么是重载呢","children":[]}]}],"relativePath":"随笔/2020/JavaScript 实现重载(含 TypeScript ).md","lastUpdated":1672736520000}'),v={name:"随笔/2020/JavaScript 实现重载(含 TypeScript ).md"},h=t("h1",{id:"javascript-实现重载-含-typescript",tabindex:"-1"},[e("JavaScript 实现重载(含 TypeScript ) "),t("a",{class:"header-anchor",href:"#javascript-实现重载-含-typescript","aria-hidden":"true"},"#")],-1),S=t("p",null,"还记得第一次看到“重载”这个东西是在那本厚厚的犀牛书（《JavaScript权威指南》）中，当时刚自学 JavaScript， 看这书很多地方都跳过了，加上书里说 JavaScript 是没有“重载”的，从此就没理过这东西了。今天看《Java 编程思想》时看到了重载，突然就想起了 JavaScript，理解重载概念后，觉得其实 JavaScript 是可以手动去实现重载的。",-1),m=t("h3",{id:"那么什么是重载呢",tabindex:"-1"},[e("那么什么是重载呢？ "),t("a",{class:"header-anchor",href:"#那么什么是重载呢","aria-hidden":"true"},"#")],-1),f=t("p",null,[e("刚开始接触这个概念时，我认为的重载是"),t("s",null,"同一个方法被“重新加载”的意思"),e("，而实际上并不是。实际上我认为把它叫作“多载”更合适")],-1);function J(a,r,y,T,V,$){const c=u,p=d("ClientOnly");return _(),n("div",null,[h,i(p,null,{default:o(()=>[i(c,{modelValue:a.$frontmatter,"onUpdate:modelValue":r[0]||(r[0]=s=>a.$frontmatter=s)},null,8,["modelValue"])]),_:1}),S,m,f])}const C=l(v,[["render",J]]);export{x as __pageData,C as default};
