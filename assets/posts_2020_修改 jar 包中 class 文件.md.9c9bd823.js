import{_ as c,c as p,a as s,w as o,b as n,d,e as h,r as l,o as u}from"./app.1ca1cf72.js";const x=JSON.parse('{"title":"修改 jar 包中 class 文件","description":"","frontmatter":{"title":"修改 jar 包中 class 文件","author":"teemwu","date":"2020/07/31 02:58","isPublished":true,"categories":null,"tags":["Java"],"wordCount":540},"headers":[{"level":1,"title":"修改 jar 包中 class 文件","slug":"修改-jar-包中-class-文件","link":"#修改-jar-包中-class-文件","children":[{"level":3,"title":"反编译 jar 包","slug":"反编译-jar-包","link":"#反编译-jar-包","children":[]},{"level":3,"title":"生成 class","slug":"生成-class","link":"#生成-class","children":[]},{"level":3,"title":"替换 class","slug":"替换-class","link":"#替换-class","children":[]},{"level":3,"title":"参考","slug":"参考","link":"#参考","children":[]}]}],"relativePath":"posts/2020/修改 jar 包中 class 文件.md","lastUpdated":1678442282000}'),_={name:"posts/2020/修改 jar 包中 class 文件.md"},j=n("h1",{id:"修改-jar-包中-class-文件",tabindex:"-1"},[d("修改 jar 包中 class 文件 "),n("a",{class:"header-anchor",href:"#修改-jar-包中-class-文件","aria-hidden":"true"},"#")],-1),b=h(`<p>做 Java 练习时，引用的第三方的 jar 包，其中有些方法冗余，在 IDEA 智能提示时总是排在第一个提示，影响开发效率，因此想修改 jar 包中 class 的方法。由于使用的是 macOS 系统，看了很多教程基本上是基于 Windows 的，不大适用，故整理下解决方法，方便遇到此问题的同学能顺利解决。</p><p>现在假设我有一个第三方 jar 包 net.jar ，我要修改里面的 Print.class 类，具体操作步骤如下：</p><h3 id="反编译-jar-包" tabindex="-1">反编译 jar 包 <a class="header-anchor" href="#反编译-jar-包" aria-hidden="true">#</a></h3><p>使用 <a href="http://java-decompiler.github.io/" target="_blank" rel="noreferrer">JD-GUI</a> 这个工具就能解决，下载安装完打开软件将你的 jar 包拖进去，将你要修改的 class 保存成 .java 文件即可。这一步我们得到了 Print.java 文件。（当然，你也可以通过其它工具来反编译，网上说通过 vim 直接修改 class 文件的，我这边打开会乱码，故反编译后保存成 .java 文件再修改。）</p><h3 id="生成-class" tabindex="-1">生成 class <a class="header-anchor" href="#生成-class" aria-hidden="true">#</a></h3><p>得到了修改完的 .java 文件后，我们需要将它编译成 class 文件才能替换掉 jar 包里的 class ，直接改后缀名是无效的哦。现在假设 jar 包和 反编译后的 .java 文件在同一目录，执行以下命令即可生成可用的 class。</p><div class="language-bat"><button title="Copy Code" class="copy"></button><span class="lang">bat</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">javac -cp net.jar Print.java</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h3 id="替换-class" tabindex="-1">替换 class <a class="header-anchor" href="#替换-class" aria-hidden="true">#</a></h3><h4 id="_1、以防万一-先拷贝-jar-包为-zip-文件再进行操作" tabindex="-1">1、以防万一，先拷贝 jar 包为 .zip 文件再进行操作 <a class="header-anchor" href="#_1、以防万一-先拷贝-jar-包为-zip-文件再进行操作" aria-hidden="true">#</a></h4><div class="language-bat"><button title="Copy Code" class="copy"></button><span class="lang">bat</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">cp net.jar net.zip</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h4 id="_2、解压-net-zip-到-net-unzip-文件夹" tabindex="-1">2、解压 net.zip 到 net-unzip 文件夹 <a class="header-anchor" href="#_2、解压-net-zip-到-net-unzip-文件夹" aria-hidden="true">#</a></h4><div class="language-bat"><button title="Copy Code" class="copy"></button><span class="lang">bat</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">unzip net.zip -d net-unzip/</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>进入解压后的文件夹，找到你要替换的类，并用之前生成的 Print.class 替换掉。</p><h4 id="_3、重新打包" tabindex="-1">3、重新打包 <a class="header-anchor" href="#_3、重新打包" aria-hidden="true">#</a></h4><p>在 net-unzip 目录里执行以下命令，其中 META-INF 和 net 均为解压后就存在的目录</p><div class="language-bat"><button title="Copy Code" class="copy"></button><span class="lang">bat</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">jar -cvfM0 net.jar META-INF </span><span style="color:#89DDFF;">net</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>重新打包完，此时当前目录应该多了个 net.jar 文件，至此整个修改 jar 包操作结束。</p><h3 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-hidden="true">#</a></h3><ul><li><a href="https://www.cnblogs.com/grey-wolf/p/11291379.html#3083248972" target="_blank" rel="noreferrer">https://www.cnblogs.com/grey-wolf/p/11291379.html#3083248972</a></li><li><a href="https://blog.csdn.net/chy555chy/article/details/78460837" target="_blank" rel="noreferrer">https://blog.csdn.net/chy555chy/article/details/78460837</a></li></ul>`,19);function g(a,e,m,v,f,C){const t=l("articleMeta"),r=l("ClientOnly");return u(),p("div",null,[j,s(r,null,{default:o(()=>[s(t,{modelValue:a.$frontmatter,"onUpdate:modelValue":e[0]||(e[0]=i=>a.$frontmatter=i)},null,8,["modelValue"])]),_:1}),b])}const k=c(_,[["render",g]]);export{x as __pageData,k as default};
