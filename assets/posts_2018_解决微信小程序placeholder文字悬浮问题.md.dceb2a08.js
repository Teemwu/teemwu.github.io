import{_ as d,c as s,a as o,w as i,b as t,d as p,e as h,r as l,o as _}from"./app.b4c69dc4.js";const q=JSON.parse('{"title":"解决微信小程序placeholder文字悬浮问题","description":"","frontmatter":{"title":"解决微信小程序placeholder文字悬浮问题","author":"teemwu","date":"2018/08/16 19:23","isPublished":true,"categories":["微信小程序"],"tags":null,"wordCount":335},"headers":[{"level":1,"title":"解决微信小程序placeholder文字悬浮问题","slug":"解决微信小程序placeholder文字悬浮问题","link":"#解决微信小程序placeholder文字悬浮问题","children":[{"level":2,"title":"方法一：","slug":"方法一","link":"#方法一","children":[]},{"level":2,"title":"方法二：","slug":"方法二","link":"#方法二","children":[]},{"level":2,"title":"方法三：","slug":"方法三","link":"#方法三","children":[]}]}],"relativePath":"posts/2018/解决微信小程序placeholder文字悬浮问题.md","lastUpdated":1675147220000}'),u={name:"posts/2018/解决微信小程序placeholder文字悬浮问题.md"},v=t("h1",{id:"解决微信小程序placeholder文字悬浮问题",tabindex:"-1"},[p("解决微信小程序placeholder文字悬浮问题 "),t("a",{class:"header-anchor",href:"#解决微信小程序placeholder文字悬浮问题","aria-hidden":"true"},"#")],-1),m=h(`<h2 id="方法一" tabindex="-1"><strong>方法一：</strong> <a class="header-anchor" href="#方法一" aria-hidden="true">#</a></h2><p>在弹出层显示时隐藏input或者textarea组件，测试发现只有设置”display:none“才生效，设置&quot;opacity:0&quot;真机测试placeholder的文字依旧存在。当然也可以设置wx:if或hidden来显示隐藏，只不过这些做法都影响布局，不推荐。</p><p>后来再想了下，其实可以在隐藏textarea的时候用view来模拟textarea显示内容，这样既不改变布局，也能合理地展示内容。</p><h2 id="方法二" tabindex="-1"><strong>方法二：</strong> <a class="header-anchor" href="#方法二" aria-hidden="true">#</a></h2><p>通过“<a href="https://developers.weixin.qq.com/miniprogram/dev/component/cover-view.html" target="_blank" rel="noreferrer">cover-view</a>”组件来写弹出层，不修改placeholder。</p><p>官方原话：</p><blockquote><p>覆盖在原生组件之上的文本视图，可覆盖的原生组件包括<code>map</code>、<code>video</code>、<code>canvas</code>、<code>camera</code>、<code>live-player</code>、<code>live-pusher</code>，只支持嵌套<code>cover-view</code>、<code>cover-image</code>，可在<code>cover-view</code>中使用<code>button</code>。</p></blockquote><p>这个做法适合在弹出层层级比较单一的时候，倘若弹出层是一个自定义的日历，且日历的每个组件都要使用coever-view，cover-image代替，其渲染性能会大大减弱。（其实picker组件也是可以在cover-view中使用的，具体是将其显示的值用cover-view包裹即可）</p><h2 id="方法三" tabindex="-1"><strong>方法三：</strong> <a class="header-anchor" href="#方法三" aria-hidden="true">#</a></h2><p>通过控制“placeholder-style&quot;或者”placeholder-class&quot;来设置placeholder的颜色来显示或隐藏placeholder文字。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&lt;textarea placeholder-style=&quot;color: transparent&quot; placeholder=&quot;请输入&quot;/&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div>`,11);function g(e,a,f,C,w,x){const r=l("articleMeta"),c=l("ClientOnly");return _(),s("div",null,[v,o(c,null,{default:i(()=>[o(r,{modelValue:e.$frontmatter,"onUpdate:modelValue":a[0]||(a[0]=n=>e.$frontmatter=n)},null,8,["modelValue"])]),_:1}),m])}const y=d(u,[["render",g]]);export{q as __pageData,y as default};
