import{_ as p,c as i,b as n,w as r,d as e,e as c,a as d,r as C,o as y,f as A}from"./app.5e3fb6e7.js";const g="/assets/2020091010200.988869f2.png",f=JSON.parse('{"title":"微信内置浏览器中文竖排居中","description":"","frontmatter":{"title":"微信内置浏览器中文竖排居中","author":"teemwu","date":"2020/09/10 10:20","isPublished":true,"categories":["CSS"],"tags":null,"wordCount":446},"headers":[{"level":1,"title":"微信内置浏览器中文竖排居中","slug":"微信内置浏览器中文竖排居中","link":"#微信内置浏览器中文竖排居中","children":[{"level":3,"title":"text-orientation 可取值","slug":"text-orientation-可取值","link":"#text-orientation-可取值","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}]}],"relativePath":"随笔/2020/微信内置浏览器中文竖排居中.md","lastUpdated":1671680872000}'),h={name:"随笔/2020/微信内置浏览器中文竖排居中.md"},_=e("h1",{id:"微信内置浏览器中文竖排居中",tabindex:"-1"},[c("微信内置浏览器中文竖排居中 "),e("a",{class:"header-anchor",href:"#微信内置浏览器中文竖排居中","aria-hidden":"true"},"#")],-1),m=d(`<p>实现中文竖排通常情况下直接设置 <code>writing-mode: vertical-rl;</code> 即可，顶多加浏览器前缀，如下：</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">-webkit-writing-mode: </span><span style="color:#FFCB6B;">vertical-rl</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">-ms-writing-mode: </span><span style="color:#FFCB6B;">tb-rl</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#FFCB6B;">writing-mode</span><span style="color:#A6ACCD;">: </span><span style="color:#FFCB6B;">vertical-rl</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"></span></code></pre></div><p>在微信内置的浏览器下预览，中文是竖排显示了，可是文字方向却不对了，如图</p><p><img src="`+g+`" alt=""></p><p>出现这种情况可能是微信内置的浏览器默认 <code>text-orientation</code> 属性跟英文显示一样，使用了 <code>sideways</code>，只要改为</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">text-orientation</span><span style="color:#A6ACCD;">: upright;</span></span>
<span class="line"></span></code></pre></div><p>即可。此时，微信内置浏览器和其它浏览器显示的中文都一样竖排了，不过居中却还有差异，这里使用 flex 和 padding 做了下兼容，具体如下：</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">-webkit-writing-mode: </span><span style="color:#FFCB6B;">vertical-rl</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">-ms-writing-mode: </span><span style="color:#FFCB6B;">tb-rl</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#FFCB6B;">writing-mode</span><span style="color:#A6ACCD;">: </span><span style="color:#FFCB6B;">vertical-rl</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#FFCB6B;">text-orientation</span><span style="color:#A6ACCD;">: upright;</span></span>
<span class="line"><span style="color:#A6ACCD;">width:10px;</span></span>
<span class="line"><span style="color:#A6ACCD;">display: -webkit-box;</span></span>
<span class="line"><span style="color:#A6ACCD;">display: -ms-flexbox;</span></span>
<span class="line"><span style="color:#A6ACCD;">display: flex;</span></span>
<span class="line"><span style="color:#A6ACCD;">-webkit-box-pack: center;</span></span>
<span class="line"><span style="color:#A6ACCD;">-ms-flex-pack: center;</span></span>
<span class="line"><span style="color:#FFCB6B;">justify-content</span><span style="color:#A6ACCD;">: center;</span></span>
<span class="line"><span style="color:#A6ACCD;">-webkit-box-align: center;</span></span>
<span class="line"><span style="color:#A6ACCD;">-ms-flex-align: center;</span></span>
<span class="line"><span style="color:#FFCB6B;">align-items</span><span style="color:#A6ACCD;">: center;</span></span>
<span class="line"><span style="color:#A6ACCD;">padding:5px 2px 5px 0;</span></span>
<span class="line"></span></code></pre></div><h3 id="text-orientation-可取值" tabindex="-1">text-orientation 可取值 <a class="header-anchor" href="#text-orientation-可取值" aria-hidden="true">#</a></h3><ul><li><p>mixed——将水平脚本的字符旋转90°。自然地表现垂直脚本的特征。默认值。</p></li><li><p>upright——自然地表现（竖直）水平脚本的字符以及垂直脚本的字形。请注意，此关键字会使所有字符被视为从左到右：使用的值direction被强制为ltr。</p></li><li><p>sideways——使字符按照水平放置的方式布置，但如果writing-mode是vertical-rl，则整行再向右旋转90°；如果writing-mode是vertical-lr，则整行向左旋转90°。为了兼容性而保留了sideways的别名sideways-right。</p></li><li><p>use-glyph-orientation——在SVG元素上，这个关键字会导致使用过时的SVG属性值glyph-orientation-vertical和glyph-orientation-horizontal</p></li></ul><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-hidden="true">#</a></h2><p><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/text-orientation" target="_blank" rel="noreferrer">https://developer.mozilla.org/en-US/docs/Web/CSS/text-orientation</a></p>`,12);function u(s,a,x,B,D,b){const l=A,t=C("ClientOnly");return y(),i("div",null,[_,n(t,null,{default:r(()=>[n(l,{modelValue:s.$frontmatter,"onUpdate:modelValue":a[0]||(a[0]=o=>s.$frontmatter=o)},null,8,["modelValue"])]),_:1}),m])}const w=p(h,[["render",u]]);export{f as __pageData,w as default};
