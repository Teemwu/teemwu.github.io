import{_ as c,c as r,C as n,z as i,x as e,a as d,N as D,D as l,o as y}from"./chunks/framework.04c7c4c6.js";const b=JSON.parse('{"title":"ts 排除 node_modules 目录检测无效","description":"","frontmatter":{"title":"ts 排除 node_modules 目录检测无效","author":"teemwu","date":"2021/08/06 15:52","isPublished":true,"categories":["Javascript","Webpack","报错"],"tags":null,"wordCount":213},"headers":[{"level":1,"title":"ts 排除 node_modules 目录检测无效","slug":"ts-排除-node-modules-目录检测无效","link":"#ts-排除-node-modules-目录检测无效","children":[{"level":3,"title":"参考","slug":"参考","link":"#参考","children":[]}]}],"relativePath":"posts/2021/ts 排除 node_modules 目录检测无效.md","lastUpdated":1679191435000}'),F={name:"posts/2021/ts 排除 node_modules 目录检测无效.md"},u=e("h1",{id:"ts-排除-node-modules-目录检测无效",tabindex:"-1"},[d("ts 排除 node_modules 目录检测无效 "),e("a",{class:"header-anchor",href:"#ts-排除-node-modules-目录检测无效","aria-hidden":"true"},"#")],-1),C=D(`<p>在项目中使用自己编写的组件库，运行项目时发现组件库中有些第三方包会报类型错误，提示说找不到类型包，而实际上在组件库中是安装了对应的类型包的。 根据网上的答案，只要开启 skipLibCheck，然而依旧无效：</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// tsconfig.json</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">compilerOptions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">skipLibCheck</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>后将 import 改为 require 导入包使用，确实是可以了，然而这样做并不友好</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 将</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// import * as LZString from &#39;lz-string&#39;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 改为</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> LZString </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">lz-string</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>最后解决方法是将类型提示包添加到 <code>dependencies</code> 中即可</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// package.json</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">dependencies</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">@types/lz-string</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">^1.3.34</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>这样，项目中安装使用自己编写的组件库时，会自动去安装对应的类型包。</p><h3 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-hidden="true">#</a></h3><ul><li><a href="https://stackoverflow.com/a/67999392" target="_blank" rel="noreferrer">https://stackoverflow.com/a/67999392</a></li></ul>`,9);function _(s,a,m,A,h,g){const o=l("articleMeta"),t=l("ClientOnly");return y(),r("div",null,[u,n(t,null,{default:i(()=>[n(o,{modelValue:s.$frontmatter,"onUpdate:modelValue":a[0]||(a[0]=p=>s.$frontmatter=p)},null,8,["modelValue"])]),_:1}),C])}const k=c(F,[["render",_]]);export{b as __pageData,k as default};
