import{_ as c,c as t,C as e,z as i,x as l,a as y,N as d,D as a,o as D}from"./chunks/framework.04c7c4c6.js";const F="/assets/2020080500170.8cbe1f1b.png",v=JSON.parse('{"title":"VSCode 搭建 Java 开发环境","description":"","frontmatter":{"title":"VSCode 搭建 Java 开发环境","author":"teemwu","date":"2020/08/05 00:17","isPublished":true,"categories":["VS Code","工具"],"tags":["Java"],"wordCount":1448},"headers":[{"level":1,"title":"VSCode 搭建 Java 开发环境","slug":"vscode-搭建-java-开发环境","link":"#vscode-搭建-java-开发环境","children":[{"level":3,"title":"扩展安装","slug":"扩展安装","link":"#扩展安装","children":[]},{"level":3,"title":"遇到的问题","slug":"遇到的问题","link":"#遇到的问题","children":[]}]}],"relativePath":"posts/2020/VSCode 搭建 Java 开发环境.md","lastUpdated":1679191435000}'),m={name:"posts/2020/VSCode 搭建 Java 开发环境.md"},C=l("h1",{id:"vscode-搭建-java-开发环境",tabindex:"-1"},[y("VSCode 搭建 Java 开发环境 "),l("a",{class:"header-anchor",href:"#vscode-搭建-java-开发环境","aria-hidden":"true"},"#")],-1),g=d('<blockquote><p>工欲善其事，必先利其器 -《论语·卫灵公》</p></blockquote><p>最近在看《代码整洁之道》一书，其示例代码均为 Java 语言所写。虽说编程语言有很多相通的，但作为一名没有写过 Java 的前端，看完大半后发现很难再继续读下去，其中一些思想还是不能理解。加上后面打算再看下《算法》红宝书，正因此，激发了我对 Java 这门语言的兴趣，打算花点时间来入门下 Java 的基础。试了用 Eclipse 和 Intellij 编辑器来写了些练习，发现还是 VSCode 操作顺手。或许有人说 Intellij 很强大，可对于我来说 VSCode 免费、轻量级，优势还是挺明显的，最终也还是选了 VSCode。 写了几天遇到些问题，记录下吧。</p><h3 id="扩展安装" tabindex="-1">扩展安装 <a class="header-anchor" href="#扩展安装" aria-hidden="true">#</a></h3><p>如果你是为了简单编写和调试 Java 代码，直接安装下面两个扩展就可以直接跑 Java 程序了。</p><ul><li><a href="https://marketplace.visualstudio.com/items?itemName=redhat.java" target="_blank" rel="noreferrer">Language Support for Java(TM) by Red Hat</a> Java 语言支持扩展</li><li><a href="https://marketplace.visualstudio.com/items?itemName=vscjava.vscode-java-debug" target="_blank" rel="noreferrer">Debugger for Java</a> Java 调试相关的扩展</li></ul><p>若你不满足于此，可以直接安装 Java 全家桶扩展，一扩展搞定所有。</p><ul><li><a href="https://marketplace.visualstudio.com/items?itemName=vscjava.vscode-java-pack" target="_blank" rel="noreferrer">Java Extension Pack</a> Java 主流扩展集合</li></ul><h3 id="遇到的问题" tabindex="-1">遇到的问题 <a class="header-anchor" href="#遇到的问题" aria-hidden="true">#</a></h3><h4 id="_1-怎么更改启动调试快捷键-由于我使用的-mac-键盘-每次调试都要同时按-fn-f5-着实影响调试心情" tabindex="-1">1. 怎么更改启动调试快捷键？（由于我使用的 Mac 键盘，每次调试都要同时按 <code>fn + F5</code> 着实影响调试心情） <a class="header-anchor" href="#_1-怎么更改启动调试快捷键-由于我使用的-mac-键盘-每次调试都要同时按-fn-f5-着实影响调试心情" aria-hidden="true">#</a></h4><p>打开 VSCode 快捷键修改设置，路径 <code>Code=&gt;Preferences=&gt;KeyBoard Shortcuts</code>, 在设置的搜索框输入“Run”，找到相应的选项，点击编辑按钮，弹出快捷键录入框，按下你希望设置的组合键就好了</p><p><img src="'+F+`" alt=""></p><h4 id="_2-想忽略掉一些没意义的警告-做练习时有些变量或方法暂时不用时-编辑器会出现黄色波浪线提醒-且输出警告信息" tabindex="-1">2. 想忽略掉一些没意义的警告？（做练习时有些变量或方法暂时不用时，编辑器会出现黄色波浪线提醒，且输出警告信息） <a class="header-anchor" href="#_2-想忽略掉一些没意义的警告-做练习时有些变量或方法暂时不用时-编辑器会出现黄色波浪线提醒-且输出警告信息" aria-hidden="true">#</a></h4><p>在项目根目录新建 <code>.settings</code> 文件夹(新建完如果在 VSCode 目录里看不到，则看<a href="#Q3">问题3</a> )，并在此文件夹下新建 <code>org.eclipse.jdt.core.prefs</code> 文件，此文件里面可以加入以下内容：</p><details><summary>org.eclipse.jdt.core.prefs</summary><div class="language-ini"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F07178;">eclipse.preferences.version</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">1</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.annotation.inheritNullAnnotations</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">disabled</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.annotation.missingNonNullByDefaultAnnotation</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.annotation.nonnull</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">org.eclipse.jdt.annotation.NonNull</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.annotation.nonnull.secondary</span><span style="color:#89DDFF;">=</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.annotation.nonnullbydefault</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">org.eclipse.jdt.annotation.NonNullByDefault</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.annotation.nonnullbydefault.secondary</span><span style="color:#89DDFF;">=</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.annotation.nullable</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">org.eclipse.jdt.annotation.Nullable</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.annotation.nullable.secondary</span><span style="color:#89DDFF;">=</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.annotation.nullanalysis</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">disabled</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.APILeak</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">warning</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.annotatedTypeArgumentToUnannotated</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">info</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.annotationSuperInterface</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">warning</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.autoboxing</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.comparingIdentical</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">warning</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.deadCode</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">warning</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.deprecation</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">warning</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">disabled</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">disabled</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.discouragedReference</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">warning</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.emptyStatement</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.explicitlyClosedAutoCloseable</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.fallthroughCase</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.fatalOptionalError</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">disabled</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.fieldHiding</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.finalParameterBound</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">warning</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">warning</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.forbiddenReference</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">error</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">warning</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.includeNullInfoFromAsserts</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">disabled</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">warning</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">warning</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.indirectStaticAccess</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.localVariableHiding</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.methodWithConstructorName</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">warning</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.missingDefaultCase</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.missingEnumCaseDespiteDefault</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">disabled</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">enabled</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.missingSerialVersion</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">warning</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.noEffectAssignment</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">warning</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">warning</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.nonnullParameterAnnotationDropped</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">warning</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.nonnullTypeVariableFromLegacyInvocation</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">warning</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.nullAnnotationInferenceConflict</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">error</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.nullReference</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">warning</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.nullSpecViolation</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">error</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.nullUncheckedConversion</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">warning</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">warning</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.parameterAssignment</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.pessimisticNullAnalysisForFreeTypeVariables</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">warning</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.potentialNullReference</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.rawTypeReference</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">warning</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.redundantNullAnnotation</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">warning</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.redundantNullCheck</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.redundantSpecificationOfTypeArguments</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.redundantSuperinterface</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.reportMethodCanBePotentiallyStatic</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.reportMethodCanBeStatic</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.specialParameterHidingField</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">disabled</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.staticAccessReceiver</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">warning</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">disabled</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.suppressWarnings</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">enabled</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.suppressWarningsNotFullyAnalysed</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">info</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.syntacticNullAnalysisForFields</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">disabled</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.terminalDeprecation</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">warning</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.typeParameterHiding</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">warning</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">enabled</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">warning</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.unclosedCloseable</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">warning</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.unhandledWarningToken</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">warning</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.unlikelyCollectionMethodArgumentType</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">warning</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.unlikelyCollectionMethodArgumentTypeStrict</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">disabled</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.unlikelyEqualsArgumentType</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">info</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.unnecessaryElse</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.unstableAutoModuleName</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">warning</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">enabled</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">enabled</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">disabled</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.unusedExceptionParameter</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.unusedImport</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.unusedLabel</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">warning</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.unusedLocal</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.unusedParameter</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">enabled</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">disabled</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">disabled</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.unusedPrivateMember</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.unusedTypeParameter</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">ignore</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.unusedWarningToken</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">warning</span></span>
<span class="line"><span style="color:#F07178;">org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">warning</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div></details><h4 id="_3-新建-settings-文件夹后看不到" tabindex="-1">3. 新建 <code>.settings</code> 文件夹后看不到？<a id="Q3"></a> <a class="header-anchor" href="#_3-新建-settings-文件夹后看不到" aria-hidden="true">#</a></h4><p>在 VSCode 设置里加入下面配置就好（<code>Command + , </code> 打开配置文件）</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">files.exclude</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">**/.settings</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">false,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,17);function A(s,n,u,b,j,h){const o=a("articleMeta"),p=a("ClientOnly");return D(),t("div",null,[C,e(p,null,{default:i(()=>[e(o,{modelValue:s.$frontmatter,"onUpdate:modelValue":n[0]||(n[0]=r=>s.$frontmatter=r)},null,8,["modelValue"])]),_:1}),g])}const _=c(m,[["render",A]]);export{v as __pageData,_ as default};
