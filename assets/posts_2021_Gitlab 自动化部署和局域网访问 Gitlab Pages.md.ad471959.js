import{_ as o,c,a as n,w as r,b as l,d as g,e as d,r as e,o as u}from"./app.48ac0e79.js";const b="/assets/2021030321540.aab37590.png",C="/assets/2021030321541.6f138e6a.png",h="/assets/2021030321542.25176d1b.png",y="/assets/2021030321543.791a787e.png",m="/assets/2021030321544.fc2aa20d.png",w=JSON.parse('{"title":"Gitlab 自动化部署和局域网访问 Gitlab Pages","description":"","frontmatter":{"title":"Gitlab 自动化部署和局域网访问 Gitlab Pages","author":"teemwu","date":"2021/03/03 21:54","isPublished":true,"categories":null,"tags":["gitlab"],"wordCount":801},"headers":[{"level":1,"title":"Gitlab 自动化部署和局域网访问 Gitlab Pages","slug":"gitlab-自动化部署和局域网访问-gitlab-pages","link":"#gitlab-自动化部署和局域网访问-gitlab-pages","children":[{"level":3,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":3,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":3,"title":"配置","slug":"配置","link":"#配置","children":[]}]}],"relativePath":"posts/2021/Gitlab 自动化部署和局域网访问 Gitlab Pages.md","lastUpdated":1675147408000}'),A={name:"posts/2021/Gitlab 自动化部署和局域网访问 Gitlab Pages.md"},_=l("h1",{id:"gitlab-自动化部署和局域网访问-gitlab-pages",tabindex:"-1"},[g("Gitlab 自动化部署和局域网访问 Gitlab Pages "),l("a",{class:"header-anchor",href:"#gitlab-自动化部署和局域网访问-gitlab-pages","aria-hidden":"true"},"#")],-1),D=d(`<h3 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-hidden="true">#</a></h3><p>前些天好不容易升级了 Gitlab，组件库文档也搭建好了，只差自动化部署。由于只是想给团队内部使用，所以 gitlab 部署时并没有使用域名，而 gitlab pages 访问却需要填具体域名，如果填 IP 的话是访问不到的。下面记录下简单的配置过程。</p><h3 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-hidden="true">#</a></h3><p>安装前先查看是否已经安装了</p><div class="language-bat"><button title="Copy Code" class="copy"></button><span class="lang">bat</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">gitlab-runner -v</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>如果还没安装的话，可以根据官方的方法进行安装</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"># Download the binary for your system</span></span>
<span class="line"><span style="color:#A6ACCD;">sudo curl -L --output /usr/local/bin/gitlab-runner https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-linux-amd64</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"># Give it permissions to execute</span></span>
<span class="line"><span style="color:#A6ACCD;">sudo chmod +x /usr/local/bin/gitlab-runner</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"># Create a GitLab CI user</span></span>
<span class="line"><span style="color:#A6ACCD;">sudo useradd --comment &#39;GitLab Runner&#39; --create-home gitlab-runner --shell /bin/bash</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"># Install and run as service</span></span>
<span class="line"><span style="color:#A6ACCD;">sudo gitlab-runner install --user=gitlab-runner --working-directory=/home/gitlab-runner</span></span>
<span class="line"><span style="color:#A6ACCD;">sudo gitlab-runner start</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-hidden="true">#</a></h3><p>修改 gitlab.rb 的配置文件</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">vi /etc/gitlab/gitlab.rb</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>gitlab pages 的域名我们假设为 <code>http://kk-gitlab.cn</code>，你也可以根据自己的喜好来填，切记不能是 IP 地址！ 修改如下</p><div class="language-ini"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">##! Define to enable GitLab Pages</span></span>
<span class="line"><span style="color:#A6ACCD;">pages_external_url </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://kk-gitlab.cn</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">gitlab_pages[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">enable</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">] = true</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>保存后，执行以下命令</p><div class="language-ini"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 刷新配置</span></span>
<span class="line"><span style="color:#A6ACCD;">gitlab-ctl reconfigure</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 重启 gitlab</span></span>
<span class="line"><span style="color:#A6ACCD;">gitlab-ctl restart</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>然后我们需要先启动 gitlab-runner 服务</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">gitlab-runner start</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>启动成功后我们就需要开始注册 runner 了，具体执行命令可通过下图步骤获得，需要注意的是登录的账号必须为管理者账号，否则看不到那个“设置”按钮 <img src="`+b+`" alt=""> 点击第三步，弹出提示窗，在最底下找到类似下面的语句，复制到服务器执行</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C3E88D;">sudo gitlab-runner register --url http://xx.xx.xx.xxx/ --registration-token xxxxxxxxxxxxxx</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>执行后需要你输入一些信息，步骤如下</p><ol><li>输入url地址（enter 跳过）</li><li>输入token（enter 跳过）</li><li>输入描述，任意即可</li><li>输入标签（enter 跳过）</li><li>选择Runner executor，这里选择 shell</li></ol><p>操作完后，刷新 Runners 页面，就可以看到新注册的 runner 了</p><p><img src="`+C+'" alt=""></p><p>点击编辑，进入 runner 的设置，设置保存后，在页面下面选择要应用 runner 的项目 enable 即可</p><p><img src="'+h+`" alt=""></p><p>我们可以检查下 runner 的状态</p><div class="language-ini"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">gitlab-runner verify</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>此时我们重新提交代码时，gitlab-runner 应该会自动执行部署了，部署成功如下图 <img src="`+y+'" alt=""></p><p><img src="'+m+`" alt=""></p><p>在上图我们可以看到 gitlab-page 的访问地址，直接访问是不行的，因为是我们乱写的域名，此时我们如果只在本地访问的话，可以修改服务器和本地机器的 <a href="https://www.cnblogs.com/teemwu/p/10063842.html" target="_blank" rel="noreferrer">hosts</a>，将 gitlab-page 的域名指向我们服务器的IP</p><div class="language-ini"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 服务器端 hosts 增加</span></span>
<span class="line"><span style="color:#A6ACCD;">127.0.0.1 gitlab-page 的地址</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><div class="language-ini"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 本地的 hosts 增加</span></span>
<span class="line"><span style="color:#A6ACCD;">服务器IP  gitlab-page地址</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>至此，本地可以直接访问你的 gitlab pages 了，当然这种方式不是很好的地方是每个项目都要修改一次 hosts，后面或许会通过 nginx 来做转发，待续。。</p>`,32);function x(s,a,v,f,k,G){const t=e("articleMeta"),p=e("ClientOnly");return u(),c("div",null,[_,n(p,null,{default:r(()=>[n(t,{modelValue:s.$frontmatter,"onUpdate:modelValue":a[0]||(a[0]=i=>s.$frontmatter=i)},null,8,["modelValue"])]),_:1}),D])}const E=o(A,[["render",x]]);export{w as __pageData,E as default};
