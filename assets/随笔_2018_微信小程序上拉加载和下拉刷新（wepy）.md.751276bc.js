import{_ as t,c as r,b as a,w as c,d as l,e as D,a as i,r as y,o as C,f as F}from"./app.3977ba6f.js";const f=JSON.parse('{"title":"微信小程序上拉加载和下拉刷新（wepy）","description":"","frontmatter":{"title":"微信小程序上拉加载和下拉刷新（wepy）","author":"teemwu","date":"2018/06/15 20:08","isPublished":true,"categories":["微信小程序"],"tags":["wepy"],"wordCount":559},"headers":[{"level":1,"title":"微信小程序上拉加载和下拉刷新（wepy）","slug":"微信小程序上拉加载和下拉刷新-wepy","link":"#微信小程序上拉加载和下拉刷新-wepy","children":[{"level":2,"title":"方案一（scroll-view）：","slug":"方案一-scroll-view","link":"#方案一-scroll-view","children":[]},{"level":2,"title":"方案二（page页面事件函数）：","slug":"方案二-page页面事件函数","link":"#方案二-page页面事件函数","children":[]}]}],"relativePath":"随笔/2018/微信小程序上拉加载和下拉刷新（wepy）.md","lastUpdated":1671244038000}'),A={name:"随笔/2018/微信小程序上拉加载和下拉刷新（wepy）.md"},d=l("h1",{id:"微信小程序上拉加载和下拉刷新-wepy",tabindex:"-1"},[D("微信小程序上拉加载和下拉刷新（wepy） "),l("a",{class:"header-anchor",href:"#微信小程序上拉加载和下拉刷新-wepy","aria-hidden":"true"},"#")],-1),u=i(`<p><strong>2018/07/16更新</strong></p><p>经过测试发现，wepy列表上拉加载更多时出现渲染延迟或者渲染不全，造成这个原因是page过渡动画中设置了<strong>animation-fill-mode: both</strong>;这个属性，去掉之后渲染正常。应该不是兼容性问题，因为在原生上测试加上这一属性是渲染正常的，不明所以。。。</p><hr><p><strong>这篇随笔主要是记录在用wepy写小程序下拉刷新和上拉加载功能时遇到的数据显示不完全的问题及解决方法。</strong></p><p>网上很多关于小程序的上拉加载和下拉刷新的文章的实现方法，无非两种，一是用<a href="https://developers.weixin.qq.com/miniprogram/dev/component/scroll-view.html" target="_blank" rel="noreferrer">scroll-view</a>组件，另一种则是使用<a href="https://developers.weixin.qq.com/miniprogram/dev/framework/app-service/page.html?search-key=onReachBottom" target="_blank" rel="noreferrer">onReachBottom</a>()和onPullDownRefresh()两个页面事件处理函数。</p><p>scroll-view实现不好的是不能使用onPullDownRefresh，只能检测滚动到顶部触发刷新或者其它动画操作，以及在其内部使用<code>textarea</code>、<code>map</code>、<code>canvas</code>、<code>video等组件会有各种不适。</code></p><p>所以，最理想的方法是检测onReachBottom来进行更多数据加载和改变加载动画，检测onPullDownReFresh进行数据更新（官方支持动画）。</p><h2 id="方案一-scroll-view" tabindex="-1">方案一（scroll-view）： <a class="header-anchor" href="#方案一-scroll-view" aria-hidden="true">#</a></h2><div class="language-ini"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">&lt;scroll-view @</span><span style="color:#F07178;">scroll</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">handleScroll</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">              @</span><span style="color:#F07178;">scrolltoupper</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">upper</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">              @</span><span style="color:#F07178;">scrolltolower</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">loadMore</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#F07178;">scroll-top</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{{scrollTop}}</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">              scroll-y</span></span>
<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#F07178;">scroll-with-animation</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{{true}}</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">height: 100%;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  &lt;view wx:</span><span style="color:#F07178;">for</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{{data}}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> wx:</span><span style="color:#F07178;">key</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{{index}}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    &lt;!--复杂的内容条目--&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  &lt;/view&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  &lt;!--加载动画&amp;提示切换--&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  &lt;view&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    &lt;view </span><span style="color:#F07178;">hidden</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{{!hasNext}}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">&gt;&lt;/view&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    &lt;view&gt;{{hasNext?</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">正在加载</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">无更多数据</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">}}&lt;/view&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  &lt;/view&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;/scroll-view&gt;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>这个方案如果不要求有下拉动画是挺好的，至少数据渲染时正常。</p><h2 id="方案二-page页面事件函数" tabindex="-1"><strong>方案二（page页面事件函数）：</strong> <a class="header-anchor" href="#方案二-page页面事件函数" aria-hidden="true">#</a></h2><div class="language-ini"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">　　 &lt;view wx:</span><span style="color:#F07178;">for</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{{dataList}}</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">          wx:</span><span style="color:#F07178;">key</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{{index}}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      &lt;!--复杂内容填充--&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    &lt;/view&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    &lt;view  wx:</span><span style="color:#F07178;">if</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{{hasNext}}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">padding: 5px;text-align: center</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      正在加载</span></span>
<span class="line"><span style="color:#A6ACCD;">    &lt;/view&gt;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>相关方法：</p><div class="language-groovy"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">    onPullDownRefresh</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#676E95;">//请求数据更新</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">    onReachBottom</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#676E95;">//请求更多数据</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>上面这样子是渲染正常的，但如果“正在加载”换成方案一那种较复杂的判断，在安卓下则会出现渲染不完全。查看元素是已经渲染的了，可是就是有半截没显示，由于用的是wepy所以不确定是小程序本身问题，还是wepy 脏检的问题。后续再写原生测下。</p><p><strong>注意：用方案二可能ios下会滚动卡顿的问题，参考：<a href="https://www.cnblogs.com/fiy-noob/p/8624898.html" target="_blank" rel="noreferrer">微信小程序ios端overflow:auto滚动卡顿</a></strong></p>`,16);function g(s,n,w,h,_,v){const o=F,p=y("ClientOnly");return C(),r("div",null,[d,a(p,null,{default:c(()=>[a(o,{modelValue:s.$frontmatter,"onUpdate:modelValue":n[0]||(n[0]=e=>s.$frontmatter=e)},null,8,["modelValue"])]),_:1}),u])}const q=t(A,[["render",g]]);export{f as __pageData,q as default};
