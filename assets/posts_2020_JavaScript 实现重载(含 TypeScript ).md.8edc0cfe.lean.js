import{_ as n,c as o,C as i,z as d,x as t,a as e,D as p,o as _}from"./chunks/framework.88b2c8bb.js";const V=JSON.parse('{"title":"JavaScript 实现重载(含 TypeScript )","description":"","frontmatter":{"title":"JavaScript 实现重载(含 TypeScript )","author":"teemwu","date":"2020/08/06 23:57","isPublished":false,"categories":null,"tags":null,"wordCount":180},"headers":[{"level":1,"title":"JavaScript 实现重载(含 TypeScript )","slug":"javascript-实现重载-含-typescript","link":"#javascript-实现重载-含-typescript","children":[{"level":3,"title":"那么什么是重载呢？","slug":"那么什么是重载呢","link":"#那么什么是重载呢","children":[]}]}],"relativePath":"posts/2020/JavaScript 实现重载(含 TypeScript ).md","lastUpdated":1678960772000}'),u={name:"posts/2020/JavaScript 实现重载(含 TypeScript ).md"},v=t("h1",{id:"javascript-实现重载-含-typescript",tabindex:"-1"},[e("JavaScript 实现重载(含 TypeScript ) "),t("a",{class:"header-anchor",href:"#javascript-实现重载-含-typescript","aria-hidden":"true"},"#")],-1),h=t("p",null,"还记得第一次看到“重载”这个东西是在那本厚厚的犀牛书（《JavaScript权威指南》）中，当时刚自学 JavaScript， 看这书很多地方都跳过了，加上书里说 JavaScript 是没有“重载”的，从此就没理过这东西了。今天看《Java 编程思想》时看到了重载，突然就想起了 JavaScript，理解重载概念后，觉得其实 JavaScript 是可以手动去实现重载的。",-1),S=t("h3",{id:"那么什么是重载呢",tabindex:"-1"},[e("那么什么是重载呢？ "),t("a",{class:"header-anchor",href:"#那么什么是重载呢","aria-hidden":"true"},"#")],-1),m=t("p",null,[e("刚开始接触这个概念时，我认为的重载是"),t("s",null,"同一个方法被“重新加载”的意思"),e("，而实际上并不是。实际上我认为把它叫作“多载”更合适")],-1);function J(a,r,f,y,T,x){const s=p("articleMeta"),c=p("ClientOnly");return _(),o("div",null,[v,i(c,null,{default:d(()=>[i(s,{modelValue:a.$frontmatter,"onUpdate:modelValue":r[0]||(r[0]=l=>a.$frontmatter=l)},null,8,["modelValue"])]),_:1}),h,S,m])}const $=n(u,[["render",J]]);export{V as __pageData,$ as default};
